{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/channelhistory/channelhistory.component.css","webpack:///./src/app/channelhistory/channelhistory.component.html","webpack:///./src/app/channelhistory/channelhistory.component.ts","webpack:///./src/app/chat/chat.component.css","webpack:///./src/app/chat/chat.component.html","webpack:///./src/app/chat/chat.component.ts","webpack:///./src/app/controlpanel/controlpanel.component.css","webpack:///./src/app/controlpanel/controlpanel.component.html","webpack:///./src/app/controlpanel/controlpanel.component.ts","webpack:///./src/app/createuser/createuser.component.css","webpack:///./src/app/createuser/createuser.component.html","webpack:///./src/app/createuser/createuser.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/logout/logout.component.css","webpack:///./src/app/logout/logout.component.html","webpack:///./src/app/logout/logout.component.ts","webpack:///./src/app/menu/menu.component.css","webpack:///./src/app/menu/menu.component.html","webpack:///./src/app/menu/menu.component.ts","webpack:///./src/app/notfound/notfound.component.css","webpack:///./src/app/notfound/notfound.component.html","webpack:///./src/app/notfound/notfound.component.ts","webpack:///./src/app/second/second.component.css","webpack:///./src/app/second/second.component.html","webpack:///./src/app/second/second.component.ts","webpack:///./src/app/selectroom/selectroom.component.css","webpack:///./src/app/selectroom/selectroom.component.html","webpack:///./src/app/selectroom/selectroom.component.ts","webpack:///./src/app/services/socket/socket.service.ts","webpack:///./src/app/socketservice/socketservice.component.css","webpack:///./src/app/socketservice/socketservice.component.html","webpack:///./src/app/socketservice/socketservice.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent} from './login/login.component';\nimport {ChatComponent} from './chat/chat.component';\nimport {NotfoundComponent} from './notfound/notfound.component';\nimport {CreateuserComponent} from './createuser/createuser.component';\nimport {LogoutComponent} from './logout/logout.component';\nimport {SelectroomComponent} from './selectroom/selectroom.component';\nimport {ControlpanelComponent} from './controlpanel/controlpanel.component';\nimport {ChannelhistoryComponent} from './channelhistory/channelhistory.component';\n\nimport {SecondComponent} from './second/second.component';\n\nconst routes: Routes = [\n  {path:\"login\", component:LoginComponent},\n  {path:\"selectroom\", component:SelectroomComponent},\n  {path:\"chat\", component:ChatComponent},\n  {path:\"createuser\", component:CreateuserComponent},\n  {path:\"404\", component:NotfoundComponent},\n  {path:\"logout\", component:LogoutComponent},\n  {path:\"controlpanel\", component:ControlpanelComponent},\n  {path:\"second\", component:SecondComponent},\n  {path:\"channelhistory\", component:ChannelhistoryComponent},\n  {path:\"**\", redirectTo: '404'},\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<div id=\\\"container\\\">\\n  <app-menu></app-menu>\\n</div>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'my-app2';\n\n  constructor() {}\n\n  ngOnInit(){\n\n  \n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {Router} from '@angular/router';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { CreateuserComponent } from './createuser/createuser.component';\nimport { SecondComponent } from './second/second.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { NotfoundComponent } from './notfound/notfound.component';\nimport { SocketserviceComponent } from './socketservice/socketservice.component';\nimport { SelectroomComponent } from './selectroom/selectroom.component';\nimport { ControlpanelComponent } from './controlpanel/controlpanel.component';\nimport { ChannelhistoryComponent } from './channelhistory/channelhistory.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    MenuComponent,\n    CreateuserComponent,\n    SecondComponent,\n    LogoutComponent,\n    ChatComponent,\n    NotfoundComponent,\n    SocketserviceComponent,\n    SelectroomComponent,\n    ControlpanelComponent,\n    ChannelhistoryComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  Message History Empty\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-channelhistory',\n  templateUrl: './channelhistory.component.html',\n  styleUrls: ['./channelhistory.component.css']\n})\nexport class ChannelhistoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2>Welcome {{username}}</h2>\\n<button *ngIf=\\\"username\\\" (click)=\\\"logout()\\\" class =\\\"logout\\\">Logout</button>\\n\\n<input [(ngModel)]=\\\"message\\\" />\\n<button (click)=\\\"sendMessage()\\\">Send</button>\\n<div class=\\\"messages\\\">\\n  <div *ngFor=\\\"let message of messages\\\" class=\\\"message\\\">\\n    {{message.text}}\\n  </div>\\n<div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { SocketService } from '../services/socket/socket.service';\nimport { Router } from \"@angular/router\";\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser'\n\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n  username:string;\n  messages=[];\n  message;\n  connection;\n\n  constructor(private sockServ: SocketService, private router:Router) {\n  console.log(router); }\n\n  ngOnInit() {\n    if(!sessionStorage.getItem('username')) {\n      console.log('Not validated');\n      sessionStorage.clear();\n      alert('Not a valid user');\n      this.router.navigateByUrl('login');\n    } else {\n      this.username = sessionStorage.getItem('username');\n      console.log(\"Session started for: \" + this.username);\n      this.connection = this.sockServ.getMessages().subscribe(message=>{\n      this.messages.push(message);\n      //this.message.push('');\n      this.message = '';\n\n      });\n    }\n\n  }\n\n  sendMessage(){\n    this.sockServ.sendMessage(this.message + '('+this.username+')');\n  }\n\n  ngOnDestroy() {\n    if (this.connection) {\n      this.connection.unsubscribe();\n    }\n  }\n\n  logout(){\n    sessionStorage.clear();\n    console.log('Session Cleared');\n    this.router.navigateByUrl('login');\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n\\n\\n<div *ngIf=\\\"userID > 1\\\">Super User\\n<div>Create a new user</div>\\n<form (submit)=\\\"createNewUser($event)\\\">\\n  <input type=\\\"email\\\" placeholder=\\\"Username\\\" [(ngModel)]=\\\"usernameNewUser\\\" name=\\\"username\\\" id=\\\"usernameNewUser\\\">\\n  <input type=\\\"password\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"passwordNewUser\\\" name=\\\"password\\\" id=\\\"passwordNewUser\\\">\\n  <input type=\\\"text\\\" placeholder=\\\"Group\\\" [(ngModel)]=\\\"groupNewUser\\\" name=\\\"group\\\" id=\\\"groupNewUser\\\">\\n  <button type=\\\"submit\\\">Submit</button>\\n</form>\\n\\n\\n<div>Remove a user\\n  <form (submit)=\\\"removeUser($event)\\\">\\n    <input type=\\\"email\\\" placeholder=\\\"Username\\\" [(ngModel)]=\\\"usernameRemoveuser\\\" name=\\\"username\\\" id=\\\"usernameRemoveuser\\\">\\n    <button type=\\\"submit\\\">Submit</button>\\n  </form>\\n</div>\\n\\n\\n\\n<div>Make a user a super admin\\n  <form (submit)=\\\"makeUserSuperAdmin($event)\\\">\\n    <input type=\\\"email\\\" placeholder=\\\"Username\\\" [(ngModel)]=\\\"usernameMakeSuperUser\\\" name=\\\"username\\\" id=\\\"usernameMakeSuperUser\\\">\\n    <button type=\\\"submit\\\">Submit</button>\\n  </form>\\n</div>\\n\\n<div *ngIf=\\\"userID > 0\\\">Admin User\\n<div>Create a new group </div>\\n  <form (submit)=\\\"createGroup($event)\\\">\\n    <input type=\\\"group\\\" placeholder=\\\"Group\\\" [(ngModel)]=\\\"groupnameNewGroup\\\" name=\\\"groupname\\\" id=\\\"groupnameNewGroup\\\">\\n    <button type=\\\"submit\\\">Submit</button>\\n  </form>\\n</div>\\n\\n\\n<div>Add an exisiting user to group\\n  <form (submit)=\\\"addUserToGroup($event)\\\">\\n    <input type=\\\"email\\\" placeholder=\\\"Username\\\" [(ngModel)]=\\\"usernameAddUserToGroup\\\" name=\\\"username\\\" id=\\\"usernameAddUserToGroup\\\">\\n    <input type=\\\"group\\\" placeholder=\\\"Group\\\" [(ngModel)]=\\\"groupAddUserToGroup\\\" name=\\\"groupname\\\" id=\\\"groupAddUserToGroup\\\">\\n    <button type=\\\"submit\\\">Submit</button>\\n  </form>\\n</div>\\n\\n\\n<div>Add channel to group\\n  <form (submit)=\\\"addchannelToGroup($event)\\\">\\n    <input type=\\\"channel\\\" placeholder=\\\"Channel\\\" [(ngModel)]=\\\"channelnameAddChannel\\\" name=\\\"channelname\\\" id=\\\"channelnameAddChannel\\\">\\n    <input type=\\\"group\\\" placeholder=\\\"Group\\\" [(ngModel)]=\\\"groupChannelToGroup\\\" name=\\\"groupname\\\" id=\\\"groupChannelToGroup\\\">\\n    <button type=\\\"submit\\\">Submit</button>\\n  </form>\\n</div>\\n\\n\\n<div>Delete a group\\n  <form (submit)=\\\"deleteGroup($event)\\\">\\n    <input type=\\\"group\\\" placeholder=\\\"Group\\\" [(ngModel)]=\\\"groupnameDeleteGroup\\\" name=\\\"groupname\\\" id=\\\"groupnameDeleteGroup\\\">\\n    <button type=\\\"submit\\\">Submit</button>\\n  </form>\\n</div>\\n\\n<div>Delete a user from a group\\n  <form (submit)=\\\"deleteUserFromGroupFunc($event)\\\">\\n    <input type=\\\"email\\\" placeholder=\\\"Username\\\" [(ngModel)]=\\\"usernameDeleteUserFromGroup\\\" name=\\\"username\\\" id=\\\"usernameDeleteUserFromGroup\\\">\\n    <input type=\\\"group\\\" placeholder=\\\"Group\\\" [(ngModel)]=\\\"deleteAUserFromGroup\\\" name=\\\"groupname\\\" id=\\\"deleteAUserFromGroup\\\">\\n    <button type=\\\"submit\\\">Submit</button>\\n  </form>\\n</div>\\n\\n<div>Delete a user from a channel\\n  <form (submit)=\\\"deleteUserFromChannel($event)\\\">\\n    <input type=\\\"email\\\" placeholder=\\\"Username\\\" [(ngModel)]=\\\"deleteUserFromChannelName\\\" name=\\\"username\\\" id=\\\"deleteUserFromChannelName\\\">\\n    <input type=\\\"channel\\\" placeholder=\\\"Channel\\\" [(ngModel)]=\\\"userDeleteFromChannelChannelName\\\" name=\\\"channelname\\\" id=\\\"userDeleteFromChannelChannelName\\\">\\n    <button type=\\\"submit\\\">Submit</button>\\n  </form>\\n</div>\\n\\n<div>Add a user to a channel\\n  <form (submit)=\\\"addNewUserToChannel($event)\\\">\\n    <input type=\\\"email\\\" placeholder=\\\"Username\\\" [(ngModel)]=\\\"addUserToChannel\\\" name=\\\"username\\\" id=\\\"addUserToChannel\\\">\\n    <input type=\\\"channel\\\" placeholder=\\\"Channel\\\" [(ngModel)]=\\\"channelAddUserChannel\\\" name=\\\"channelname\\\" id=\\\"channelAddUserChannel\\\">\\n    <button type=\\\"submit\\\">Submit</button>\\n  </form>\\n</div>\\n\\n<div>Make a user a group admin of a group\\n  <form (submit)=\\\"makeUserGroupAdminOfGroup($event)\\\">\\n    <input type=\\\"email\\\" placeholder=\\\"Username\\\" [(ngModel)]=\\\"usernameMakeGroupAdminOfGroup\\\" name=\\\"username\\\" id=\\\"usernameMakeGroupAdminOfGroup\\\">\\n    <input type=\\\"group\\\" placeholder=\\\"Group\\\" [(ngModel)]=\\\"groupNameAdminOfGroup\\\" name=\\\"groupname\\\" id=\\\"groupNameAdminOfGroup\\\">\\n    <button type=\\\"submit\\\">Submit</button>\\n  </form>\\n</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-controlpanel',\n  templateUrl: './controlpanel.component.html',\n  styleUrls: ['./controlpanel.component.css']\n})\nexport class ControlpanelComponent implements OnInit {\n\nusernameNewUser:string ='';\npasswordNewUser:string ='';\ngroupNewUser:String = '';\nusernameRemoveuser:String = '';\ngroupnameNewGroup:String = '';\ngroupnameDeleteGroup:String = '';\nusernameMakeGroupAdminOfGroup:String = '';\ngroupNameAdminOfGroup:String = '';\nusernameMakeSuperUser:String = '';\ngroupAddUserToGroup:String = '';\nusernameAddUserToGroup:String = '';\nusernameDeleteUserFromGroup:String = '';\ndeleteAUserFromGroup:String = '';\nchannelnameAddChannel:String = '';\ngroupChannelToGroup:String = '';\naddUserToChannel:String = '';\nchannelAddUserChannel:String = '';\ndeleteUserFromChannelName:String = '';\nuserDeleteFromChannelChannelName:String = '';\n\nuserID:Number = 0;\n\n  constructor(private router:Router) {\n    router.navigateByUrl('/controlpanel');\n  }\n\n  ngOnInit() {\n\n  if (sessionStorage.getItem(\"id\") !== null)\n    this.userID = parseInt(sessionStorage.getItem(\"id\"));\n  }\n\n  /* Adds a user to the Person object.\n   * Parameter: usernameNewUser: The user that I wish to add to the Person object.\n   * Parameter: passwordNewUser: The password that I wish to add to the Person object.\n   * Parameter: groupNewUser: The group that I wish to add to the Person object.\n  */\n  createNewUser(event) {\n    console.log(event);\n\n    let username = this.usernameNewUser\n    let password = this.passwordNewUser\n    let group = this.groupNewUser\n\n    console.log(username);\n    console.log(password);\n    console.log(group);\n\n    let url = '/server/register?username=' + username + '&password=' + password + '&group=' + group;\n    fetch(url)\n      .then(function(response){\n        console.log(\"response fetch\");\n        return response.json();\n      }).then(function(myJson) {\n      console.log(\"Json fetch\");\n        console.log(JSON.stringify(myJson));\n      });\n  }\n\n  /* Deletes a user in the Person object.\n   * Parameter: usernameRemoveuser: The user that I wish to add to the Person object.\n  */\n  removeUser($event) {\n  console.log(\"This remove User Log\");\n    let username = this.usernameRemoveuser;\n    console.log(username);\n\n    let url = '/server/delete?username=' + username;\n\n    fetch(url)\n      .then(function(response){\n        return response.json();\n      }).then(function(myJson) {\n        console.log(JSON.stringify(myJson));\n      });\n\n  }\n\n  /* Adds a group to the GroupClass object.\n   * Parameter: groupnameNewGroup: The group name that I wish to add to the GroupClass object.\n  */\n  createGroup(event) {\n\n    let group = this.groupnameNewGroup\n\n    let url = '/server/registerGroup?group=' + group;\n    fetch(url)\n      .then(function(response){\n        console.log(\"response fetch\");\n        return response.json();\n      }).then(function(myJson) {\n      console.log(\"Json fetch\");\n        console.log(JSON.stringify(myJson));\n      });\n  }\n\n  /* Deletes a group in the GroupClass object.\n   * Parameter: groupnameDeleteGroup: The group name that I wish to delete from the GroupClass object.\n  */\n  deleteGroup(event) {\n\n    let group = this.groupnameDeleteGroup;\n    console.log(group);\n\n    let url = '/server/deleteGroup?group=' + group;\n\n    fetch(url)\n      .then(function(response){\n        return response.json();\n      }).then(function(myJson) {\n        console.log(JSON.stringify(myJson));\n      });\n\n  }\n\n  /* Changes the status of a user to Group Admin of a specified group.\n   * Parameter: usernameMakeGroupAdminOfGroup: The user that I wish to make Group Admin of a specified group.\n   * Parameter: groupNameAdminOfGroup: The group name that I wish the specified user to be Group Admin of.\n  */\n  makeUserGroupAdminOfGroup(event) {\n    let username = this.usernameMakeGroupAdminOfGroup;\n    let group = this.groupNameAdminOfGroup;\n\n    let url = '/server/groupAdminOfGroup?username=' + username + '&group=' + group;\n    fetch(url)\n      .then(function(response){\n        console.log(\"response fetch\");\n        return response.json();\n      }).then(function(myJson) {\n      console.log(\"Json fetch\");\n        console.log(JSON.stringify(myJson));\n      });\n  }\n\n  /* Changes the status of a user to Super Admin.\n   * Parameter: usernameMakeSuperUser: The user that I wish to make Super Admin.\n  */\n  makeUserSuperAdmin(event) {\n    let username = this.usernameMakeSuperUser;\n\n    let url = '/server/makeSuper?username=' + username;\n    fetch(url)\n      .then(function(response){\n        console.log(\"response fetch\");\n        return response.json();\n      }).then(function(myJson) {\n      console.log(\"Json fetch\");\n        console.log(JSON.stringify(myJson));\n      });\n\n  }\n\n  /* Adds a specified user to a group.\n   * Parameter: usernameAddUserToGroup: The specified user that I wish to add to the group.\n   * Parameter: groupnameNewGroup: The group name that I wish to add the specified user to.\n  */\n  addUserToGroup(event){\n  let username = this.usernameAddUserToGroup;\n  let group = this.groupAddUserToGroup;\n\n  let url = '/server/addUserToGroup?username=' + username + '&group=' + group;\n  fetch(url)\n    .then(function(response){\n      console.log(\"response fetch\");\n      return response.json();\n    }).then(function(myJson) {\n    console.log(\"Json fetch\");\n      console.log(JSON.stringify(myJson));\n    });\n\n  }\n\n  /* Deletes a specified user from a group.\n   * Parameter: usernameDeleteUserFromGroup: The specified user that I wish to delete from the group.\n   * Parameter: deleteAUserFromGroup: The group name that I wish to delete the specified user from.\n  */\n  deleteUserFromGroupFunc(event) {\n  let username = this.usernameDeleteUserFromGroup;\n  let group = this.deleteAUserFromGroup;\n\n  let url = '/server/deleteUserFromGroup?username=' + username + '&group=' + group;\n  fetch(url)\n    .then(function(response){\n      console.log(\"response fetch\");\n      return response.json();\n    }).then(function(myJson) {\n    console.log(\"Json fetch\");\n      console.log(JSON.stringify(myJson));\n    });\n\n  }\n\n  /* Adds a channel to a specified group.\n   * Parameter: channelnameAddChannel: The specified channel that I wish to add to the group.\n   * Parameter: groupChannelToGroup: The group name that I wish to add the specified channel to.\n  */\n  addchannelToGroup($event) {\n\n  let channelname = this.channelnameAddChannel;\n  let group = this.groupChannelToGroup;\n\n  let url = '/server/createChannel?channelname=' + channelname + '&group=' + group;\n  fetch(url)\n    .then(function(response){\n      console.log(\"response fetch\");\n      return response.json();\n    }).then(function(myJson) {\n    console.log(\"Json fetch\");\n      console.log(JSON.stringify(myJson));\n    });\n\n  }\n\n  /* Adds a specified user to a channel.\n   * Parameter: addUserToChannel: The specified user that I wish to add to the channel.\n   * Parameter: channelAddUserChannel: The channel name that I wish to add the specified user to.\n  */\n  addNewUserToChannel($event) {\n  let channeluser = this.addUserToChannel;\n  let channelname = this.channelAddUserChannel;\n\n  let url = '/server/addUserToChannel?username=' + channeluser + '&channelname=' + channelname;\n  fetch(url)\n    .then(function(response){\n      console.log(\"response fetch\");\n      return response.json();\n    }).then(function(myJson) {\n    console.log(\"Json fetch\");\n      console.log(JSON.stringify(myJson));\n    });\n\n  }\n\n\n  /* Deletes a specified user from a channel.\n   * Parameter: deleteUserFromChannelName: The specified user that I wish to delete from the channel.\n   * Parameter: userDeleteFromChannelChannelName: The channel name that I wish to delete the specified user from.\n  */\n  deleteUserFromChannel(event) {\n\n  let channeluser = this.deleteUserFromChannelName;\n  let channelname = this.userDeleteFromChannelChannelName;\n\n  let url = '/server/deleteUserFromChannel?username=' + channeluser + '&channelname=' + channelname;\n  fetch(url)\n    .then(function(response){\n      console.log(\"response fetch\");\n      return response.json();\n    }).then(function(myJson) {\n    console.log(\"Json fetch\");\n      console.log(JSON.stringify(myJson));\n    });\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  createuser works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {FormsModule} from '@angular/forms';\n\n@Component({\n  selector: 'app-createuser',\n  templateUrl: './createuser.component.html',\n  styleUrls: ['./createuser.component.css']\n})\nexport class CreateuserComponent implements OnInit {\n\n  constructor(private router:Router, private form:FormsModule) {\n\n    router.navigateByUrl('/createuser');\n\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form (submit)=\\\"loginUser($event)\\\">\\n  <input type=\\\"email\\\" placeholder=\\\"Username\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" id=\\\"username\\\">\\n  <input type=\\\"password\\\" placeholder=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\">\\n  <button type=\\\"submit\\\">Submit</button>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {Router} from '@angular/router';\n\nvar count = 1;\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username:string ='';\n  password:string ='';\n  constructor(private router:Router, private form:FormsModule) { }\n\n  ngOnInit() {\n  }\n\n  fetchingData(url, finish, cannot) {\n  fetch(url)\n    .then(response => {return response.json()})\n    .then(myJson => {\n      console.log(myJson);\n      if (myJson.success === true) {\n        finish(myJson);\n      } else {\n        cannot();\n      }\n    })\n  }\n\n  falseLogin() {\n    alert(\"Username and Password were incorrect\");\n  }\n\n  finishLogin(data) {\n  console.log(data);\n  if (typeof(Storage) !== \"undefined\") {\n    sessionStorage.setItem(\"username\", data.username);\n    sessionStorage.setItem(\"id\", data.type);\n  }\n    console.log(sessionStorage.getItem(\"id\"));\n    console.log(sessionStorage.getItem(\"username\"));\n    this.router.navigateByUrl('/controlpanel');\n  }\n\n\n  loginUser(event) {\n    event.preventDefault();\n\n    let falseBind = this.falseLogin.bind(this);\n    let finishBind = this.finishLogin.bind(this);\n    let url = '/server/login?username=' + this.username;\n\n    this.fetchingData(url, finishBind, falseBind);\n\n\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  logout works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private router:Router) {\n  sessionStorage.clear();\n  console.log(sessionStorage.getItem(\"lastname\"));\n  router.navigateByUrl('/'); }\n\n  ngOnInit() {\n\n  }\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<nav>\\n  <ul>\\n    <li> <a routerLink=\\\"login\\\">Login</a> </li>\\n    <li> <a routerLink=\\\"createuser\\\">Create User</a> </li>\\n    <li> <a routerLink=\\\"logout\\\">Logout</a> </li>\\n    <li> <a routerLink=\\\"selectroom\\\">Select Room</a> </li>\\n    <li> <a routerLink=\\\"controlpanel\\\">Control Panel</a> </li>\\n    <li> <a routerLink=\\\"channelhistory\\\">Channel History</a> </li>\\n  </ul>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  notfound works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.css']\n})\nexport class NotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1>\\n  this is my second page\\n</h1>\\n\\n<p>\\nid: {{id}} <br/>\\nusername: {{username}} <br/>\\nbirthDate: {{birthDate}} <br/>\\nage: {{age}} <br/>\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-second',\n  templateUrl: './second.component.html',\n  styleUrls: ['./second.component.css']\n})\nexport class SecondComponent implements OnInit {\n\nid = \"\"\nusername = \"\"\nbirthDate = \"\"\nage = \"\"\n\n  constructor() {\n    this.id = sessionStorage.getItem(\"id\")\n    this.username = sessionStorage.getItem(\"username\")\n    this.birthDate = sessionStorage.getItem(\"birthDate\")\n    this.age = sessionStorage.getItem(\"age\")\n\n   }\n\n  ngOnInit() {\n    console.log(sessionStorage.getItem(\"id\"));\n    console.log(sessionStorage.getItem(\"username\"));\n    console.log(sessionStorage.getItem(\"birthDate\"));\n    console.log(sessionStorage.getItem(\"age\"));\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<li *ngFor=\\\"let room of rooms\\\" >\\n  {{room}}\\n</li>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-selectroom',\n  templateUrl: './selectroom.component.html',\n  styleUrls: ['./selectroom.component.css']\n})\nexport class SelectroomComponent implements OnInit {\nrooms = [];\n  constructor(private router:Router) {\n\n\n  }\n\n  hello(url, set){\n    fetch(url)\n      .then(response => {return response.json()})\n      .then(myJson => {\n        let data = [];\n        console.log(myJson);\n        for (let i = 0; i < myJson.success.groups.length; i++) {\n          let group = {\"Name\": myJson.success.groups[i].GroupName, \"Channels\":[]};\n\n          for (let j = 0; j < myJson.success.groups[i].channels.length; j++){\n            group.Channels.push(myJson.success.groups[i].channels[j]);\n          }\n\n          data.push(group);\n\n        }\n        console.log(data);\n        set(data);\n      })\n  }\n\n  setChannels(data) {\n    for (let i = 0; i < data.length; i++){\n      this.rooms.push(\"Group:\");\n      this.rooms.push(data[i].Name);\n      if (data[i].Channels.length > 0) {\n        this.rooms.push(\"Channels:\");\n        for (let j = 0; j < data[i].Channels.length; j++) {\n          this.rooms.push(data[i].Channels[j]);\n        }\n      }\n\n    }\n  }\n\n  ngOnInit() {\n\n\n    //this.router.navigateByUrl('/chat');\n  let set = this.setChannels.bind(this);\n  let channeluser = sessionStorage.getItem(\"username\");\n\n  if (channeluser === null) {\n    channeluser = \"sam\";\n  }\n\n\n\n  let url = '/server/getGroupsAndChannels?username=' + channeluser;\n\n  this.hello(url, set);\n\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport * as io from 'socket.io-client';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n private url = \"http://localhost:3000/\";\n //private url = \"http://localhost:3000\";\n private socket;\n constructor() { }\n sendMessage(message){\n  this.socket.emit('add-message', message);\n }\n getMessages(){\n  let obmessages = new Observable(\n    observer =>{\n    this.socket = io(this.url);\n    this.socket.on('message',(data)=> {observer.next(data);\n    });\n\n    return ()=>{this.socket.disconnect();}\n    })\nreturn obmessages;\n}\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  socketservice works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-socketservice',\n  templateUrl: './socketservice.component.html',\n  styleUrls: ['./socketservice.component.css']\n})\nexport class SocketserviceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}